#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const exec = require('child_process').exec;
const p = (...args) => path.resolve.apply(path.resolve, [__dirname, '../', ...args]);

const DIRS_TO_WATCH = [
  p('dist'),
  p('src')
];

const FILTERS = {
  JS: [/\.js/gi],
  TS: [/\.ts(\.d)?/gi]
}

const ACTION_MAP = {
  JS: [stopServer, startServer]
}

var serverInstance;

function onFileChanged(eventType, filename) {
  console.log('file %s: %s', eventType, filename);
  // add debounce
}

function startServer() {
  serverInstance = exec('npm run start', (err, stdout, stderr) => {
    if (err) {
      console.error(err);
      return;
    }
    console.log(stdout);
  });
}

function stopServer() {
  serverInstance.kill('SIGHUP');
}

DIRS_TO_WATCH.forEach((dir) => {
  fs.watch(dir, {encoding: 'buffer'}, onFileChanged)
});
startServer();
